
import javax.swing.JLabel;
import javax.swing.JOptionPane;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author vivianabenitez
 */
public class Matriz extends javax.swing.JFrame {

    /**
     * Creates new form Matriz
     */
   
     
    public Matriz() {
        initComponents();
        min=0;
        max=100;
        textFieldMinValue.setText("0");
        textFieldMaxValue.setText("100");
        slider.setMajorTickSpacing(10);
        slider.setMinorTickSpacing(2);
        slider.setPaintTicks(true);
        slider.setPaintLabels(true);
        textArea.setEditable(false);
        textArea.setTabSize(7);
        labelIntervalValue.setHorizontalAlignment(JLabel.CENTER);
        labelIntervalValue.setText(String.valueOf(slider.getValue()));
        
    }
    
    public boolean checkValues(){
        String min = textFieldMinValue.getText();
        String max = textFieldMaxValue.getText();
       
        if(min.isEmpty() || max.isEmpty()){
            JOptionPane.showMessageDialog(this, "The minimum and maximum values field cannot be empty!");
            return false;
        }else{
            if( !min.matches("-?[0-9]+") ||  !max.matches("-?[0-9]+")){
                JOptionPane.showMessageDialog(this, "the entered values must be a integer!");
                return false;
            }else{
                this.min=Integer.parseInt(min);
                this.max=Integer.parseInt(max);
                if(this.min > this.max){
                    int aux = this.max;
                    this.max = this.min;
                    this.min = aux;
                }
                slider.setMinimum(this.min);
                slider.setMaximum(this.max);
                slider.setValue((this.max+this.min)/2);
                updateLabelIntervalValue();
               
                boolean ticksVisible = (this.max-this.min)<=150;
                slider.setPaintTicks(ticksVisible);
                slider.setPaintLabels(ticksVisible);
                return true;
            }
        }
        
    }
    
    public int[][] generateMatriz(){
        if ( checkValues() ){
            for (int x=0; x < matriz.length; x++) {
                for (int y=0; y < matriz[x].length; y++) {
                    matriz[x][y] = (int) Math.floor(Math.random()*(max-min+1)+min);
                }
            }
        }
         return matriz;
    }
   
    
    
    public void showMatriz(){
        String line="\n";
        for (int i = 0; i < 10; i++) {
            for (int j = 0; j < 10; j++) {
                if ( matriz[i][j] > slider.getValue() ) {
                    line += matriz[i][j] + "\t";
                }else{
                    line += "-" + "\t";
                }
            }
            line += "\n";
        }
        textArea.setText(line);
    }
    
    public void updateLabelIntervalValue(){
        labelIntervalValue.setText(String.valueOf(slider.getValue()));
    }
 
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        configurationPanel = new javax.swing.JPanel();
        slider = new javax.swing.JSlider();
        labelMaxValue = new javax.swing.JLabel();
        labelMinValue = new javax.swing.JLabel();
        labelUmbral = new javax.swing.JLabel();
        textFieldMinValue = new javax.swing.JTextField();
        textFieldMaxValue = new javax.swing.JTextField();
        applyValuesButton = new javax.swing.JButton();
        clearButton = new javax.swing.JButton();
        labelIntervalValue = new javax.swing.JLabel();
        outputPanel = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        textArea = new javax.swing.JTextArea();
        developersName = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Matrix generator");

        configurationPanel.setBorder(javax.swing.BorderFactory.createTitledBorder("Configuration"));

        slider.setBackground(new java.awt.Color(0, 102, 255));
        slider.setForeground(new java.awt.Color(0, 102, 255));
        slider.setToolTipText(" Range of positive integer values");
        slider.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        slider.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                sliderStateChanged(evt);
            }
        });

        labelMaxValue.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labelMaxValue.setText("Maximum value: ");

        labelMinValue.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labelMinValue.setText("Minimum value: ");

        labelUmbral.setFont(new java.awt.Font("Lucida Grande", 1, 13)); // NOI18N
        labelUmbral.setText("Integer Interval: ");

        textFieldMinValue.setToolTipText("");

        applyValuesButton.setBackground(new java.awt.Color(0, 102, 255));
        applyValuesButton.setText("Apply values");
        applyValuesButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        applyValuesButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                applyValuesButtonActionPerformed(evt);
            }
        });

        clearButton.setBackground(new java.awt.Color(0, 102, 255));
        clearButton.setText("Clear");
        clearButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        clearButton.setPreferredSize(new java.awt.Dimension(124, 29));
        clearButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                clearButtonActionPerformed(evt);
            }
        });

        labelIntervalValue.setBorder(javax.swing.BorderFactory.createEtchedBorder());

        javax.swing.GroupLayout configurationPanelLayout = new javax.swing.GroupLayout(configurationPanel);
        configurationPanel.setLayout(configurationPanelLayout);
        configurationPanelLayout.setHorizontalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(configurationPanelLayout.createSequentialGroup()
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurationPanelLayout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(labelMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED))
                    .addGroup(configurationPanelLayout.createSequentialGroup()
                        .addGap(43, 43, 43)
                        .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(labelUmbral)
                            .addComponent(labelMaxValue))
                        .addGap(28, 28, 28)))
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurationPanelLayout.createSequentialGroup()
                        .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(textFieldMinValue)
                            .addComponent(textFieldMaxValue)
                            .addComponent(applyValuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addGap(18, 18, 18)
                        .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(configurationPanelLayout.createSequentialGroup()
                        .addComponent(labelIntervalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 59, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, 537, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        configurationPanelLayout.setVerticalGroup(
            configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, configurationPanelLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelMinValue, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(textFieldMinValue, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(labelMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(textFieldMaxValue, javax.swing.GroupLayout.PREFERRED_SIZE, 35, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(applyValuesButton, javax.swing.GroupLayout.DEFAULT_SIZE, 38, Short.MAX_VALUE)
                    .addComponent(clearButton, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(configurationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(configurationPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(labelUmbral, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(labelIntervalValue, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(24, 24, 24))
                    .addGroup(configurationPanelLayout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, 25, Short.MAX_VALUE)
                        .addComponent(slider, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(16, 16, 16))))
        );

        jScrollPane1.setBorder(null);

        textArea.setEditable(false);
        textArea.setColumns(20);
        textArea.setRows(5);
        textArea.setToolTipText("matrix result according to interval");
        textArea.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jScrollPane1.setViewportView(textArea);

        javax.swing.GroupLayout outputPanelLayout = new javax.swing.GroupLayout(outputPanel);
        outputPanel.setLayout(outputPanelLayout);
        outputPanelLayout.setHorizontalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(outputPanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        outputPanelLayout.setVerticalGroup(
            outputPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, outputPanelLayout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 230, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        developersName.setFont(new java.awt.Font("Lucida Grande", 2, 13)); // NOI18N
        developersName.setText("Created by Viviana Benítez & Alexander Marques");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(developersName)
                .addGap(25, 25, 25))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(outputPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addComponent(configurationPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(outputPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(developersName)
                .addGap(28, 28, 28))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sliderStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_sliderStateChanged
        updateLabelIntervalValue();
        showMatriz();
    }//GEN-LAST:event_sliderStateChanged

    private void applyValuesButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_applyValuesButtonActionPerformed

        generateMatriz();
        showMatriz();
    }//GEN-LAST:event_applyValuesButtonActionPerformed

    private void clearButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_clearButtonActionPerformed
        // TODO add your handling code here:
        textFieldMinValue.setText("");
        textFieldMaxValue.setText("");
        labelIntervalValue.setText("");
        matriz = new int[10][10];
        showMatriz();
    }//GEN-LAST:event_clearButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Matriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Matriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Matriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Matriz.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
               
                new Matriz().setVisible(true);
                
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton applyValuesButton;
    private javax.swing.JButton clearButton;
    private javax.swing.JPanel configurationPanel;
    private javax.swing.JLabel developersName;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel labelIntervalValue;
    private javax.swing.JLabel labelMaxValue;
    private javax.swing.JLabel labelMinValue;
    private javax.swing.JLabel labelUmbral;
    private javax.swing.JPanel outputPanel;
    private javax.swing.JSlider slider;
    private javax.swing.JTextArea textArea;
    private javax.swing.JTextField textFieldMaxValue;
    private javax.swing.JTextField textFieldMinValue;
    // End of variables declaration//GEN-END:variables
   private int[][] matriz = new int[10][10];
   private int min;
   private int max;
}
